// <auto-generated />
using System;
using Eudaimonia.Infrastructure.Postgres;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Eudaimonia.Infrastructure.Postgres.Migrations
{
    [DbContext(typeof(PostgresDbContext))]
    partial class PostgresDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Eudaimonia.Application.Dtos.AuthorDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors", (string)null);
                });

            modelBuilder.Entity("Eudaimonia.Application.Dtos.BookDto", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Genres")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books", (string)null);
                });

            modelBuilder.Entity("Eudaimonia.Application.Dtos.PublisherDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publishers", (string)null);
                });

            modelBuilder.Entity("Eudaimonia.Application.Dtos.BookDto", b =>
                {
                    b.HasOne("Eudaimonia.Application.Dtos.AuthorDto", null)
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Eudaimonia.Application.Dtos.EditionDto", "Edition", b1 =>
                        {
                            b1.Property<Guid>("BookDtoId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Format")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("PageCount")
                                .HasColumnType("integer");

                            b1.Property<int>("PublicationYear")
                                .HasColumnType("integer");

                            b1.Property<Guid>("PublisherId")
                                .HasColumnType("uuid");

                            b1.HasKey("BookDtoId");

                            b1.ToTable("Books");

                            b1.WithOwner()
                                .HasForeignKey("BookDtoId");

                            b1.OwnsOne("Eudaimonia.Application.Dtos.ImageDto", "FrontCover", b2 =>
                                {
                                    b2.Property<Guid>("EditionDtoBookDtoId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Url")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("EditionDtoBookDtoId");

                                    b2.ToTable("Books");

                                    b2.WithOwner()
                                        .HasForeignKey("EditionDtoBookDtoId");
                                });

                            b1.Navigation("FrontCover")
                                .IsRequired();
                        });

                    b.OwnsOne("Eudaimonia.Application.Dtos.ReviewSummaryDto", "ReviewSummary", b1 =>
                        {
                            b1.Property<Guid>("BookDtoId")
                                .HasColumnType("uuid");

                            b1.Property<double>("AverageRating")
                                .HasColumnType("double precision");

                            b1.Property<int>("FiveStarRatingCount")
                                .HasColumnType("integer");

                            b1.Property<int>("FourStarRatingCount")
                                .HasColumnType("integer");

                            b1.Property<int>("OneStarRatingCount")
                                .HasColumnType("integer");

                            b1.Property<int>("RatingCount")
                                .HasColumnType("integer");

                            b1.Property<int>("ReviewCount")
                                .HasColumnType("integer");

                            b1.Property<int>("ThreeStarRatingCount")
                                .HasColumnType("integer");

                            b1.Property<int>("TwoStarRatingCount")
                                .HasColumnType("integer");

                            b1.HasKey("BookDtoId");

                            b1.ToTable("Books");

                            b1.WithOwner()
                                .HasForeignKey("BookDtoId");
                        });

                    b.Navigation("Edition")
                        .IsRequired();

                    b.Navigation("ReviewSummary")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
